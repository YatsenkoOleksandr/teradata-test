/**********
<company="Mobilize.Net">
    Copyright (C) Mobilize.Net info@mobilize.net - All Rights Reserved
    This file is part of the Mobilize Frameworks, which is
    proprietary and confidential.
    NOTICE:  All information contained herein is, and remains
    the property of Mobilize.Net Corporation.
    The intellectual and technical concepts contained herein are
    proprietary to Mobilize.Net Corporation and may be covered
    by U.S. Patents, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Mobilize.Net Corporation.
</copyright>
**********/

/*******************************************************/
/************** INTERVAL FUNCTIONS *********************/
/*******************************************************/
---------
CREATE OR REPLACE VIEW PRODUCT_VIEWS.PUBLIC.INTERVAL_FUNCTION
AS
SELECT
    TO_DATE('2000-01-01') - INTERVAL '731 day' INT_DAY,
    TO_DATE('2000-01-01') - INTERVAL '12 month' INT_MONTH,
    TO_DATE('2000-01-01') - INTERVAL '2 year' INT_YEAR,
    TO_DATE('2000-01-01') + INTERVAL '14 DAY' INT_DAY_ALT,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL '10 hour, 15 min' INT_HR2MIN,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL '23 hour, 59 min, 59.999999 sec' INT_HR2SEC,
    PUBLIC.TIMESTAMP_TO_PERIOD_UDF(TIMESTAMP '2005-02-03 12:12:12.340000') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TIMESTAMP_TO_PERIOD_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/,
    PUBLIC.DATE_TO_PERIOD_UDF(TO_DATE(TIMESTAMP '2005-02-03 12:12:12.340000')) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'DATE_TO_PERIOD_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/;

    /*** MSC-WARNING - MSCEWI1050 - MISSING DEPENDENT OBJECT "PRODUCT_VIEWS.vtargetmail" ***/
/**************************************************/
    /************** TRUNC & ROUND *********************/
    /**************************************************/
    ---------
    CREATE OR REPLACE VIEW PRODUCT_VIEWS.PUBLIC.vtruncround
    AS
    SELECT
    region,
    PUBLIC.TRUNC_UDF(DATEFIRSTPURCHASE, 'MON') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/ TRUNC_DATE,
    PUBLIC.TRUNC_UDF(DATEFIRSTPURCHASE) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/ TRUNC_DATE_DD,
    PUBLIC.ROUND_DATE_UDF(DATEFIRSTPURCHASE, 'RM') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'ROUND_DATE_UDF' INSERTED. ***/ RND_DATE,
    avg(yearlyincome) avg_annual_income,
    PUBLIC.TRUNC_UDF(AVG(YEARLYINCOME)) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/ TRUNC_INCOME,
    PUBLIC.TRUNC_UDF(AVG(YEARLYINCOME), 2) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/ TRNC_INCOME_2,
    ROUND(AVG(TOTALCHILDREN),0) RND_AVG_CHILDREN,
    avg(totalchildren) avg_children,
    ROUND(AVG(AGE)) RND_AVG_AGE,
    avg(age) avg_age
from
    PRODUCT_VIEWS.PUBLIC.vtargetmail
where datefirstpurchase in ('2011-02-08', '2011-02-09')
group by
    region,
    PUBLIC.TRUNC_UDF(DATEFIRSTPURCHASE, 'MON') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/,
    PUBLIC.TRUNC_UDF(DATEFIRSTPURCHASE) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'TRUNC_UDF' INSERTED. ***/,
    PUBLIC.ROUND_DATE_UDF(DATEFIRSTPURCHASE, 'RM') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'ROUND_DATE_UDF' INSERTED. ***/;

                                                                                                                              -- SELECT * FROM HR_VIEWS.REACHABLE_FROM;




   /**********************************************************************************/
   /************** CTAS WITH DATA, QUALIFY, FORWARD ALIAS REFERENCE ******************/
   /**********************************************************************************/
   ---------



   /******************************************************/
   /************** CTAS WITH NO DATA *********************/
   /******************************************************/
   ---------
    CREATE TABLE SALES_VIEWS.PUBLIC.FACTFINANCE_COPY_WITHOUT_DATA LIKE SALES_VIEWS.FACTFINANCE;

    /*** MSC-WARNING - MSCEWI1050 - MISSING DEPENDENT OBJECT "PRODUCT_VIEWS.INTERVAL_DATA_TYPE" ***/
/*****************************************************************************************************/
    /************** INTERVAL, PERIOD TYPES, SELECT * LOCKING ROW FOR ACCESS, QUALIFY *********************/
    /*****************************************************************************************************/
    ---------
    CREATE OR REPLACE VIEW PRODUCT_VIEWS.PUBLIC.INTERVAL_DATA_TYPE_V
    AS
    SELECT
    * FROM
    PRODUCT_VIEWS.PUBLIC.INTERVAL_DATA_TYPE;

    /*** MSC-WARNING - MSCEWI1050 - MISSING DEPENDENT OBJECT "HR_VIEWS.EMPLOYEE_PERIOD" ***/
---------
    CREATE OR REPLACE VIEW HR_VIEWS.PUBLIC.PERIOD_OVERLAP_LDIFF
    AS
    SELECT
    'OVERLAP' FUNC,
    FIRST_NAME,
    LAST_NAME
   FROM
    HR_VIEWS.PUBLIC.EMPLOYEE_PERIOD
   WHERE
    PUBLIC.PERIOD_OVERLAPS_UDF( JOB_DURATION, PUBLIC.PERIOD_UDF(DATE '2009-01-01', DATE '2010-09-24') /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_OVERLAPS_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/
    UNION ALL
    SELECT
    'LDIFF' FUNC,
    FIRST_NAME,
    LAST_NAME
   FROM
    HR_VIEWS.PUBLIC.EMPLOYEE_PERIOD
   WHERE
    TIMESTAMPDIFF('MONTH', PUBLIC.PERIOD_BEGIN_UDF(PUBLIC.PERIOD_LDIFF_UDF(JOB_DURATION, PUBLIC.PERIOD_UDF(DATE '2009-01-01', DATE '2010-09-24'))), PUBLIC.PERIOD_END_UDF(PUBLIC.PERIOD_LDIFF_UDF(JOB_DURATION, PUBLIC.PERIOD_UDF(DATE '2009-01-01', DATE '2010-09-24')))) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_BEGIN_UDF AND PERIOD_END_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_LDIFF_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ > 3
UNION ALL
    SELECT
    'RDIFF' FUNC,
    FIRST_NAME,
    LAST_NAME
   FROM
    HR_VIEWS.PUBLIC.EMPLOYEE_PERIOD
   WHERE
    PUBLIC.PERIOD_RDIFF_UDF( JOB_DURATION, PUBLIC.PERIOD_UDF(DATE '2009-01-01', DATE '2010-09-24')) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_RDIFF_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ IS NOT NULL;

    /*** MSC-WARNING - MSCEWI1050 - MISSING DEPENDENT OBJECTS "SNOWCONVERT.PERSON_EMPLOYMENT_PERIOD", "SNOWCONVERT.PERSON_LOGIN" ***/

    ---------
    CREATE OR REPLACE VIEW PRODUCT_VIEWS.PUBLIC.PERIOD_INTERVAL_BEGIN
    AS
    SELECT
    PEP.PERSON_ID,
    CAST(PUBLIC.PERIOD_BEGIN_UDF(PEP.EMPLOYMENT_PERIOD) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_BEGIN_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ AS TIMESTAMP)    AS BEGINEMPLOYMENT,
    PL.LOGIN_DTM,
    TIMESTAMPDIFF('HOUR',
        CAST(PUBLIC.PERIOD_BEGIN_UDF(PEP.EMPLOYMENT_PERIOD) /*** MSC-WARNING - MSCEWI1020 - CUSTOM UDF 'PERIOD_BEGIN_UDF' INSERTED. ***/ /*** MSC-WARNING - MSCEWI2053 - SNOWFLAKE DOES NOT SUPPORT THE PERIOD DATATYPE, ALL PERIODS ARE HANDLED AS VARCHAR INSTEAD ***/ AS TIMESTAMP),
        PL.LOGIN_DTM) AS HOURSBEFOREFIRSTLOGIN
  FROM
    SNOWCONVERT.PUBLIC.PERSON_EMPLOYMENT_PERIOD AS PEP
  JOIN
            SNOWCONVERT.PUBLIC.PERSON_LOGIN AS PL
    ON PEP.PERSON_ID = PL.PERSON_ID
    QUALIFY
    RANK() OVER (
    PARTITION BY PL.PERSON_ID
    ORDER BY PL.LOGIN_DTM
  ) = 1;

    /***************************************************/
    /************** RECURSIVE VIEW *********************/
    /***************************************************/
    ---------
    CREATE OR REPLACE RECURSIVE VIEW HR_VIEWS.PUBLIC.REACHABLE_FROM
    (DESTINATION, COST, LEGS)
    AS
    SELECT
    ROOT.DESTINATION,
    ROOT.COST,
    1 AS LEGS
  FROM
    HR.PUBLIC.FLIGHTS AS ROOT
  WHERE
    ROOT.SOURCE = 'Paris'
    UNION ALL
    SELECT
    OUTT.DESTINATION,
    INN.COST + OUTT.COST,
    INN.LEGS + 1 AS LEGS
  FROM
    PUBLIC.REACHABLE_FROM AS INN,
    HR.PUBLIC.FLIGHTS AS OUTT
  WHERE
    INN.DESTINATION = OUTT.SOURCE
    AND INN.LEGS <= 20;

    ---------
    CREATE OR REPLACE VIEW PRODUCT_VIEWS.PUBLIC.INTERVAL_DATA
    AS
    SELECT
    TO_DATE('2000-01-01') + INTERVAL_YEAR_TYPE INTERVAL_YEAR,
    TO_DATE('2000-01-01') + INTERVAL_MONTH_TYPE INTERVAL_MONTH,
    TO_DATE('2000-01-01') + INTERVAL_YEAR2MONTH_TYPE INTERVAL_YR2MON,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_DAY_TYPE INTERVAL_DAY,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_DAY2HOUR_TYPE INTERVAL_DAY2HR,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_DAY2MINUTE_TYPE INTERVAL_DAY2MIN,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_DAY2SECOND_TYPE INTERVAL_DAY2SEC,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_HOUR_TYPE INTERVAL_HR,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_HOUR2MINUTE_TYPE INTERVAL_HR2MIN,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_HOUR2SECOND_TYPE INTERVAL_HR2SEC,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_MINUTE_TYPE INTERVAL_MIN,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_MINUTE2SECOND_TYPE INTERVAL_MIN2SEC,
    TIMESTAMP '2000-01-01 01:01:01.500-01:00' + INTERVAL_SECOND_TYPE INTERVAL_SEC
    FROM
    PRODUCT_VIEWS.PUBLIC.INTERVAL_DATA_TYPE_V;